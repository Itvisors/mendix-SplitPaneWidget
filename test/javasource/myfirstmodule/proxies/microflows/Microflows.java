// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the MyFirstModule module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TestContext_OnChangeSplitterBuilder(
		myfirstmodule.proxies.TestContext _testContext
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_TestContext_OnChangeSplitter");
		builder = builder.withParam("TestContext", _testContext);
		return builder;
	}

	public static void aCT_TestContext_OnChangeSplitter(
		IContext context,
		myfirstmodule.proxies.TestContext _testContext
	)
	{
		aCT_TestContext_OnChangeSplitterBuilder(
				_testContext
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_TestContextBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.DS_TestContext");
		return builder;
	}

	public static myfirstmodule.proxies.TestContext dS_TestContext(IContext context)
	{
		Object result = dS_TestContextBuilder().execute(context);
		return result == null ? null : myfirstmodule.proxies.TestContext.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_TestContext_GetOrCreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.SUB_TestContext_GetOrCreate");
		return builder;
	}

	public static myfirstmodule.proxies.TestContext sUB_TestContext_GetOrCreate(IContext context)
	{
		Object result = sUB_TestContext_GetOrCreateBuilder().execute(context);
		return result == null ? null : myfirstmodule.proxies.TestContext.initialize(context, (IMendixObject) result);
	}
}
